<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
	</beans:bean>
	<!-- 파일 업로드를 위한 객체 -->
	<!-- 파일의 경우 데이터가 여러 조각으로 분리되어 전송 될 수 밖에 없다 -->
	<!-- 분리되어 전송 되어온 조각들을 재조림 객체 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일1개당 최대 사이즈 -->
		<beans:property name="maxUploadSize" value="10485768" /><!--10485768B  (10mb 정도) -->
	</beans:bean>
	
	<context:component-scan base-package="com.springproj.controller" /> <!--controller 가 제대로 올라오지 않으면 확인  -->
	<context:component-scan base-package=" com.springproj.exception" />
	
	<!--  연습용  -->
	<beans:bean id="exampleInterceptor"
		class="com.springproj.interceptor.ExampleInterceptor">
	</beans:bean>
	
	<!--  실제 로그인 수행 하는 인터셉터 -->
	<beans:bean id="loginInterceptor"
		class="com.springproj.interceptor.LoginInterceptor">
	</beans:bean>
	
	<!--  로그인 했는지 안했는지를 검사를 수행 Intercepter -->
	<beans:bean id="authenticationInterceptor"
		class="com.springproj.interceptor.AuthenticationInterceptor">
	</beans:bean>
	
	<interceptors>
		<interceptor>
		<!-- 아래의 매핑 주소가 request가 요청 될 때 -->
			<mapping path="/exam" />
			
			<!-- 가로채어 아래 객체가 수행되도록 -->
			<beans:ref bean="exampleInterceptor" />
		</interceptor>
		
		<interceptor> <!-- 명령을 가로채서 로그인 했는지 검사 -->
			<mapping path="/board/writeBoard" /> <!-- 게시판 글 쓰기 -->
			<mapping path="/board/modiBoard" /> <!-- 게시판 글 수정 -->
			
			<beans:ref bean="authenticationInterceptor" />
		</interceptor>
		
		<interceptor>
			<mapping path="/login" /> <!--  로그인 페이지  -->
			
			<beans:ref bean="loginInterceptor" />
		</interceptor>
	
	</interceptors>
</beans:beans>
